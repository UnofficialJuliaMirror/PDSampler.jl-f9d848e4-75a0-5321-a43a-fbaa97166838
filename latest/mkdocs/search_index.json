{
    "docs": [
        {
            "location": "/", 
            "text": "PDMP.jl Documentation\n\n\nPDMP.jl\n is a package designed to provide an efficient, flexible, and expandable framework for samplers based on \nPiecewise Deterministic Markov Processes\n and their applications.\nThis includes the \nBouncy Particle Sampler\n and the \nZig-Zag Sampler\n.\nSee \nthe references\n at the bottom of this page.\n\n\nThe package is currently under construction (Spring 2017).\nThe project is hosted and maintained by the \nAlan Turing Institute\n (ATI).\nIf you encounter problems, please \nopen an issue on Github\n.\nIf you have comments or wish to collaborate, send an email to \ntlienart \u03c3 turing \n ac \n uk\n.\n\n\nUsing the Package\n\n\nTo install the (unregistered) package, use the following command inside the Julia REPL:\n\n\nPkg.clone(\ngit://github.com/alan-turing-institute/PDMP.jl.git\n)\n\n\n\n\nTo Load the package, use the command:\n\n\nusing PDMP\n\n\n\n\nYou can also run the tests with \nPkg.test(\"PDMP\")\n and update to the latest Github version with \nPkg.update(\"PDMP\")\n.\n\n\nExamples\n\n\nThe following examples will introduce you to the functionalities of the package.\nThe code to all examples can be found in the \nexamples directory\n.\n\n\n```@contents\nPages = [\"examples/bps_mvg_constr.md\", \"examples/lbps_gchain.md\"]\nDepth = 2\n\n\n### Code documentation\n\nThese pages introduce you to the core of the package and its interface.\nThis is useful if you are looking into expanding the code yourself to add a capacity or a specific model.\n\n```@contents\nPages = [\ntechdoc/types.md\n]\nDepth = 2\n\n\n\n\nReferences\n\n\n\n\nAlexandre Bouchard-C\u00f4t\u00e9, Sebastian J. Vollmer and Arnaud Doucet, \nThe Bouncy Particle Sampler: A Non-Reversible Rejection-Free Markov Chain Monte Carlo Method\n, arXiv preprint, 2015.\n\n\nJoris Bierkens, Alexandre Bouchard-C\u00f4t\u00e9, Arnaud Doucet, Andrew B. Duncan, Paul Fearnhead, Gareth Roberts and Sebastian J. Vollmer, \nPiecewise Deterministic Markov Processes for Scalable Monte Carlo on Restricted Domains\n, arXiv preprint, 2017.\n\n\nJoris Bierkens, Paul Fearnhead and Gareth Roberts, \nThe Zig-Zag Process and Super-Efficient Sampling for Bayesian Analysis of Big Data\n, arXiv preprint, 2016.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#pdmpjl-documentation", 
            "text": "PDMP.jl  is a package designed to provide an efficient, flexible, and expandable framework for samplers based on  Piecewise Deterministic Markov Processes  and their applications.\nThis includes the  Bouncy Particle Sampler  and the  Zig-Zag Sampler .\nSee  the references  at the bottom of this page.  The package is currently under construction (Spring 2017).\nThe project is hosted and maintained by the  Alan Turing Institute  (ATI).\nIf you encounter problems, please  open an issue on Github .\nIf you have comments or wish to collaborate, send an email to  tlienart \u03c3 turing   ac   uk .", 
            "title": "PDMP.jl Documentation"
        }, 
        {
            "location": "/#using-the-package", 
            "text": "To install the (unregistered) package, use the following command inside the Julia REPL:  Pkg.clone( git://github.com/alan-turing-institute/PDMP.jl.git )  To Load the package, use the command:  using PDMP  You can also run the tests with  Pkg.test(\"PDMP\")  and update to the latest Github version with  Pkg.update(\"PDMP\") .", 
            "title": "Using the Package"
        }, 
        {
            "location": "/#examples", 
            "text": "The following examples will introduce you to the functionalities of the package.\nThe code to all examples can be found in the  examples directory .  ```@contents\nPages = [\"examples/bps_mvg_constr.md\", \"examples/lbps_gchain.md\"]\nDepth = 2  ### Code documentation\n\nThese pages introduce you to the core of the package and its interface.\nThis is useful if you are looking into expanding the code yourself to add a capacity or a specific model.\n\n```@contents\nPages = [ techdoc/types.md ]\nDepth = 2", 
            "title": "Examples"
        }, 
        {
            "location": "/#references", 
            "text": "Alexandre Bouchard-C\u00f4t\u00e9, Sebastian J. Vollmer and Arnaud Doucet,  The Bouncy Particle Sampler: A Non-Reversible Rejection-Free Markov Chain Monte Carlo Method , arXiv preprint, 2015.  Joris Bierkens, Alexandre Bouchard-C\u00f4t\u00e9, Arnaud Doucet, Andrew B. Duncan, Paul Fearnhead, Gareth Roberts and Sebastian J. Vollmer,  Piecewise Deterministic Markov Processes for Scalable Monte Carlo on Restricted Domains , arXiv preprint, 2017.  Joris Bierkens, Paul Fearnhead and Gareth Roberts,  The Zig-Zag Process and Super-Efficient Sampling for Bayesian Analysis of Big Data , arXiv preprint, 2016.", 
            "title": "References"
        }
    ]
}